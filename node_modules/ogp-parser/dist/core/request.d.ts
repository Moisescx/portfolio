/// <reference types="node" />
/// <reference types="node" />
import { IncomingHttpHeaders } from 'http';
import { RequestOptions as RequestOptionsBase } from 'https';
type Options = Pick<RequestOptionsBase, 'headers' | 'method'>;
type RequestConfig = Options & {
    url: string;
};
type ResponseData<T> = {
    status: number;
    headers?: IncomingHttpHeaders;
    text?: string;
    data?: T;
    config: RequestConfig;
};
export type RequestOptions = Omit<Options, 'method'>;
export declare const request: {
    get: <T = any>(url: string, options?: RequestOptions) => Promise<ResponseData<T>>;
    post: <T_1 = any>(url: string, options?: RequestOptions) => Promise<ResponseData<T_1>>;
};
export {};
